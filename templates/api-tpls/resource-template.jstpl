/**
 * 标题：          $${swagger.info.title}
 * 版本：          $${swagger.info.version}
 * 描述：          $${swagger.info.description}
 * 时间：          $${config.createTime}
 * swagger版本：   $${swagger.swagger}
 */
var app = angular.module('$${config.apiName}Module', [
    'ngResource'
]);

app.factory('$${config.apiName}', ['$resource', function ($resource) {
    var urlPre = '$${swagger.urlPre}';

    return $resource('', {}, {
        // 例子
        // toDoExample: {
        //     url: '/todo_example',
        //     method: 'get'
        // },
{@each swagger.paths as path,index}
    {@each path as req,key}
        /*
        * $${req.description}
        * */
        $${req.fnName}: {
            url: urlPre + '$${index}',
            method: '$${key}',$${req.headerStr}
            transformRequest: [{@if req.transformRequestFormData}transformRequestFormData{@/if}]
        }{@if !req.lastOneReq},{@/if}
    {@/each}
{@/each}
    });
}]);

/* formdata 转换*/
function transformRequestFormData(data, headersGetter) {
    // Here we set the Content-Type header to null.
    var headers = headersGetter();
    headers['Content-Type'] = undefined;

    // And here begins the logic which could be used somewhere else
    // as noted above.
    if (data == undefined) {
        return data;
    }
    var fd = new FormData();
    var createKey = function(_keys_, currentKey) {
        var keys = angular.copy(_keys_);
        keys.push(currentKey);
        formKey = keys.shift();
        if (keys.length) {
            formKey += "[" + keys.join("][") + "]"
        }
        return formKey;
    };

    var addToFd = function(object, keys) {
        angular.forEach(object, function(value, key) {
            var formKey = createKey(keys, key);

            if (value instanceof File) {
                fd.append(formKey, value);
            } else if (value instanceof FileList) {
                if (value.length == 1) {
                    fd.append(formKey, value[0]);
                } else {
                    angular.forEach(value, function(file, index) {
                        fd.append(formKey + '[' + index + ']', file);
                    });
                }
            } else if (value && (typeof value === 'object')) {
                var _keys = angular.copy(keys);
                _keys.push(key);
                addToFd(value, _keys);
            } else {
                fd.append(formKey, value);
            }
        });
    };
    addToFd(data, []);
    return fd;
}
